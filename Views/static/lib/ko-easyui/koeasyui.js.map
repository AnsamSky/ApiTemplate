{"version":3,"file":"koeasyui.js","sources":["../src/generateOption.ts","../src/basecomp.ts","../src/utils.ts","../src/generates/baseEasyuiComp.ts","../src/generates/koeasyuimessager.ts","../src/generates/kodialogs.ts","../src/generates/easyuiHelper.ts","../src/generates/optionAndMethodsRelation.ts","../src/generates/depends.ts","../src/methodExceuteProvider/depcheckExecute.ts","../src/methodExceuteProvider/executeProvider.ts","../src/defaultGenerate.ts","../src/generates/extendbind.ts","../src/generates/easyuiGenerate.ts","../src/generates/EasyuiHelper.ts","../src/generates/index.ts","../src/generateFactory.ts","../src/loader.ts","../src/kocomponents.ts","../src/main.ts"],"sourcesContent":["\r\n/**\r\n * 生成器的配置项\r\n */\r\nexport class GenerateOption{\r\n    public ko:KnockoutStatic;\r\n    public jquery:JQueryStatic;\r\n    constructor(ko:KnockoutStatic){\r\n        this.ko = ko;\r\n        this.jquery = $;\r\n    }\r\n}","import {COMPTYPE} from './utils';\r\n\r\n/**\r\n * 组件基类\r\n */\r\nexport abstract class BaseComp{\r\n    public name:string;\r\n    public type: COMPTYPE;\r\n    constructor(type:COMPTYPE){\r\n        this.type = type;\r\n    }\r\n    /**\r\n     * 绘制组件\r\n     * @param options 配置参数\r\n     */\r\n    public abstract paint(options:any);\r\n    /**\r\n    * 组件重绘方法\r\n    * @param options 配置参数\r\n    */\r\n    public abstract repaint(options:any);\r\n}","\r\n/**\r\n * 返回指定数据不重复的记录\r\n * @param arrays \r\n */\r\nexport function unique(arrays:Array<any>):Array<any>{\r\n    let result = new Array<any>();\r\n    let hash = Object.create({});\r\n    for(let irow = 0; irow < arrays.length; ++ irow){\r\n        let elm = arrays[irow];\r\n        if(!hash[elm]){\r\n            result.push(elm);\r\n            hash[elm] = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport enum CONSTKEY{\r\n    /**\r\n     * 组件名称前缀\r\n     */\r\n    CompPrefix = 'ko-'\r\n}\r\n\r\n/**\r\n * 根据组件名称获取模板DOM\r\n * @param compName \r\n */\r\nexport function getTemplate(compName:string):string{\r\n    let defaultVaue = '<div></div>';\r\n    let specialValue = {\r\n        'linkbutton': '<a></a>',\r\n        'layout': '<div style=\"height:100%\" ><!-- ko template:{ nodes:$componentTemplateNodes,data:$context.$parent } --><!-- /ko --></div>',\r\n        'dialog': '<div><!-- ko template:{ nodes:$componentTemplateNodes,data:$context.$parent } --><!-- /ko --></div>'\r\n    };\r\n    let val = specialValue[compName];\r\n    if(!val){\r\n        val = defaultVaue;\r\n    }\r\n    return val;\r\n}\r\n\r\n/**\r\n * 将arguments转换为数组\r\n */\r\nexport let convertArgToArray = Array.prototype.slice; \r\n\r\n/**\r\n * 组件类型\r\n */\r\nexport enum COMPTYPE{\r\n    /**\r\n     * easyui实例组件\r\n     */\r\n    easyui = 1,\r\n\r\n    /**\r\n     * 普通组件类型\r\n     */\r\n    norm = 8\r\n}","import {BaseComp} from '../basecomp';\r\nimport { COMPTYPE, CONSTKEY, getTemplate } from '../utils';\r\n\r\n/**\r\n * 所有easyui的基类\r\n */\r\nexport abstract class BaseEasyuiComp extends BaseComp{\r\n    public $dom:JQuery; \r\n    public $parent:JQuery;\r\n    public props:any;\r\n    protected koContext;\r\n    constructor(name, props, componentConfig){\r\n        super(COMPTYPE.easyui);\r\n        this.props = props;\r\n        this.name = name;\r\n        this.$dom = $($(componentConfig.element)[0].firstChild);\r\n        this.$parent = this.$dom.parent();\r\n        let context = ko.contextFor(componentConfig.element);\r\n        $.data(componentConfig.element, context);\r\n        this.koContext = context;\r\n    }\r\n    \r\n    /**\r\n     * 根据参数创建组件的配置对象（核心方法）\r\n     * @param options 配置参数 \r\n     */\r\n    protected createOptionsCore(options){\r\n        let opt = null;\r\n        if(options){\r\n            //viewModel不能转换\r\n            let viewModel = options.viewModel || null;\r\n            opt = ko.toJS(options);\r\n            if(viewModel){\r\n                opt.viewModel = viewModel;\r\n            }\r\n            $.map(opt,(value, key:string)=>{\r\n                if(key.substring(0,2) == 'on' && $.isFunction(value)){\r\n                    //事件\r\n                    opt[key] = value.bind(this);\r\n                }\r\n            });\r\n        } \r\n        return opt;\r\n    }\r\n    /**\r\n     * 根据参数创建组件的配置对象\r\n     * @param options 配置参数 \r\n     */\r\n    protected createOptions(options){\r\n        return this.createOptionsCore(options);\r\n    }\r\n    /**\r\n     * 绘制组件\r\n     * @param options \r\n     */\r\n    public paint(options:any){\r\n        let opt = this.createOptions(options);\r\n        this.$dom[this.name](opt);\r\n    }\r\n    /**\r\n    * 重置组件到初始化状态\r\n    * @param options 配置项\r\n    */\r\n    public resetComp(options:any){\r\n        let $parent = this.$dom.closest(`${CONSTKEY.CompPrefix}${this.name}`);\r\n        if($parent.length == 0){\r\n            $parent = this.$parent;\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.destroy && this.destroy(this);\r\n        let $dom = $(getTemplate(this.name));\r\n        $parent.append($dom);\r\n        this.$dom = $dom; \r\n    }\r\n    \r\n}","import { BaseEasyuiComp } from './baseEasyuiComp';\r\nimport { COMPTYPE, CONSTKEY, convertArgToArray } from '../utils';\r\n\r\nexport class EasyuiMessager extends BaseEasyuiComp{ \r\n    constructor(params, componentConfig){ \r\n        super('messager', Object.getOwnPropertyNames($.messager.defaults),  componentConfig); \r\n        this.bindMethods();\r\n    }\r\n    private bindMethods(){\r\n        var keys = this.getMethodKeys();\r\n        $.map(keys, key => {\r\n            this[key] = function(){\r\n                let args = convertArgToArray.call(arguments);\r\n                $.messager[key].apply($.messager, args);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取方法的Key数据\r\n     */\r\n    private getMethodKeys():Array<string>{\r\n        let methodKeys = new Array<string>();\r\n        $.map(Object.getOwnPropertyNames($.messager), (key)=>{\r\n            if(key != 'defaults'){\r\n                methodKeys.push(key);\r\n            }\r\n        });\r\n        return methodKeys;\r\n    }\r\n    public paint(options:any){\r\n        let opts = this.createOptions(options);\r\n        $.extend($.messager.defaults, opts);\r\n    }\r\n    public repaint(options: any) {  \r\n        this.paint(options);\r\n    }\r\n}   ","import { BaseComp } from '../basecomp';\r\nimport { COMPTYPE, CONSTKEY, convertArgToArray } from '../utils';\r\n\r\n/**\r\n * 基于easyui's dialog的复式弹出窗口组件\r\n * modify: 2018-09-19 sam dargon add $key， 用于外界获取实例化的对话框\r\n */\r\nexport class EasyuiDialogs extends BaseComp {\r\n    public paint(options: any) { \r\n    }\r\n    public list:KnockoutObservableArray<any>;\r\n    public bindContext:any;\r\n    constructor(params, componentConfig){\r\n        super(COMPTYPE.norm);\r\n        this.name = 'dialogs';\r\n        this.bindContext = ko.contextFor(componentConfig.element);\r\n        this.list = ko.observableArray(); \r\n    }\r\n    public repaint(options: any) {\r\n    }\r\n    /**\r\n     * 添加弹出窗口\r\n     * @param params \r\n     */\r\n    public addDialog(params){\r\n        let options = params || {};\r\n        let that = this;\r\n        let key = 'dialogs_' + ko.unwrap(this.list).length;\r\n        let funClose = options.onClose;\r\n        options.onClose = ((key)=>{ \r\n            return function(){  \r\n                that.removeDialog(key, this.$dom[0]);\r\n                if(funClose){\r\n                    funClose.call(that, key);\r\n                }\r\n            }\r\n        })(key);\r\n        //add: 2018-09-19 sam dargon, remark: set $key, use getContextForDialog in app.\r\n        options.$key = key;\r\n        this.list.push({\r\n            name:'ko-dialog',\r\n            params:{\r\n                options: options\r\n            },\r\n            key: key\r\n        });\r\n    }\r\n    /**\r\n     * 移除已弹出的窗口\r\n     * @param key 需要移除的窗口的编号\r\n     */\r\n    public removeDialog(key:string, dom){\r\n        ko.cleanNode(dom.firstElementChild);\r\n        this.list.remove((item)=>{\r\n            return item.key === key;\r\n        });\r\n    } \r\n    static getTemplate(){\r\n        return '<div data-bind=\"foreach:{data:list}\" ><div data-bind=\"component:$data,attr:{id:(\\'dialogs_\\' + $index())}\" ></div></div>'\r\n    }\r\n}","import {IExecute} from '../methodExceuteProvider';\r\nimport {CONSTKEY, getTemplate, COMPTYPE, convertArgToArray} from '../utils';\r\nimport {BaseEasyuiComp} from './baseEasyuiComp';\r\nimport { ExtendBind } from './extendbind';\r\n \r\nexport  class EasyuiHelper{\r\n    static createEasyui(compName:string, props:Array<string>, methods, execute:IExecute, extendBind:ExtendBind):any{\r\n        let tmpClass = class extends BaseEasyuiComp { \r\n            public $dom:JQuery;\r\n            public params: any;\r\n            constructor(params, componentConfig){ \r\n                super(compName.toLowerCase(), props, componentConfig);\r\n                this.params = params;\r\n                if(!this.params.options){\r\n                    this.params.options = {};\r\n                }\r\n                this.$dom = $($(componentConfig.element)[0].firstChild);\r\n                let that = this;\r\n                //绑定方法，方法还需要继承组件支持的方法的绑定\r\n                $.map(Object.getOwnPropertyNames(methods), index=>{\r\n                    if(!$.isNumeric(index)) return true;\r\n                    let methodName = methods[index]; \r\n                    that[methodName] = function(){\r\n                        //需要加一个拦截机制，用于处理依赖组件的方法（如：combogrid，依赖grid，那么grid的方法怎么执行）\r\n                        let args = convertArgToArray.call(arguments);\r\n                        //传入的参数进行扩展\r\n                        extendBind.extend(that.name, args[0], that.koContext); \r\n                        args.unshift(methodName);\r\n                        return execute.execute(that.name, methodName, that.$dom, args); \r\n                    }; \r\n                }); \r\n            }   \r\n            \r\n            /**\r\n             * 绑定change事件\r\n             */\r\n            private bindChangeEvent(sourceopts, opt:any){ \r\n                \r\n                let changeEvent = false;\r\n                $.map(props,(item, key)=>{\r\n                    if(item == 'onChange'){\r\n                        changeEvent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if(sourceopts.value && ko.isObservable(sourceopts.value) && changeEvent){\r\n                    let onChangeFn = opt.onChange;\r\n                    let that = this;\r\n                    opt['onChange'] = function(newValue, oldValue){\r\n                        //modify: 2018-10-10 sam dragon set value, but don't send notification.\r\n                        // and add onChange event.\r\n                        sourceopts.value._latestValue = newValue; \r\n                        onChangeFn && onChangeFn.call(that, newValue, oldValue);\r\n                    }\r\n                }\r\n            }\r\n            \r\n            protected createOptions(options){\r\n                let opt = this.createOptionsCore(options);\r\n                if(options){\r\n                    this.bindChangeEvent(options, opt);\r\n                }    \r\n                extendBind.extend(this.name, opt, this.koContext); \r\n                return opt;\r\n            } \r\n            public repaint(options:any){\r\n                this.resetComp(options);\r\n                this.paint(options);\r\n            }\r\n            public dispose(){\r\n                console.log('dispose ' + this.name);\r\n                //@ts-ignore\r\n                if(this.computedObservable){\r\n                    //@ts-ignore\r\n                    this.computedObservable.dispose();\r\n                }\r\n                if(this.params.options.dispose){\r\n                    this.params.options.dispose.apply(this);\r\n                }else{\r\n                    //@ts-ignore\r\n                    this.destroy && this.destroy();\r\n                }\r\n            }\r\n        };\r\n\r\n        return tmpClass;\r\n    }\r\n}\r\n/**\r\n * 根据dom获取上下文\r\n * @param dom dom节点 \r\n */\r\nexport function getContextFor(dom:HTMLElement){\r\n    let comp = $.data(dom);\r\n    return comp ? comp.$data : null;\r\n}","/**\r\n * 配置与方法的关系\r\n * 确定那些配置的改变，可以通过方法实现\r\n */\r\nexport let relation = {\r\n    tooltip:{\r\n        'content': 'update'\r\n    },\r\n    textbox:{\r\n        'value': 'setValue'\r\n    },\r\n    panel:{\r\n        'title': 'setTitle'\r\n    },\r\n    passwordbox:{\r\n        'value': 'setValue'\r\n    },\r\n    combo:{\r\n        'value': 'setValue'\r\n    },\r\n    combobox:{\r\n        'value': 'setValue',\r\n        'data': 'loadData'\r\n    },\r\n    combotree:{\r\n        'value': 'setValue',\r\n        'data': 'loadData'\r\n    },\r\n    combogrid:{        \r\n        'value': 'setValue',\r\n        'data': 'loadData'\r\n    },\r\n    combotreegrid:{\r\n        'value': 'setValue',\r\n        'data': 'loadData'\r\n    },\r\n    tagbox:{\r\n        'value': 'setValue',\r\n        'data': 'loadData'\r\n    },\r\n    numberbox:{        \r\n        'value': 'setValue'\r\n    },\r\n    datebox:{\r\n        'value': 'setValue'\r\n    },\r\n    datetimebox:{\r\n        'value': 'setValue'\r\n    },\r\n    datetimespinner:{\r\n        'value': 'setValue'\r\n    },\r\n    spinner:{\r\n        'value': 'setValue'\r\n    },\r\n    numberspinner:{\r\n        'value': 'setValue'\r\n    },\r\n    timespinner:{\r\n        'value': 'setValue'\r\n    },\r\n    slider:{\r\n        'value': 'setValue'\r\n    },\r\n    filebox:{\r\n        'value': 'setValue'\r\n    },\r\n    datagrid:{\r\n        'data': 'loadData'\r\n    },\r\n    datalist:{\r\n        'data': 'loadData'\r\n    },\r\n    propertygrid:{\r\n        'data': 'loadData'\r\n    },\r\n    tree:{\r\n        'data': 'loadData'\r\n    },\r\n    treegrid:{\r\n        'data': 'loadData'\r\n    }\r\n}","/**\r\n * easyui控件依赖关系\r\n */\r\nexport let depents = {\r\n    pagination: { dependencies: ['linkbutton'] },\r\n    datagrid: { dependencies: ['panel', 'resizable', 'linkbutton', 'pagination'] },\r\n    treegrid: { dependencies: ['datagrid'] },\r\n    propertygrid: { dependencies: ['datagrid'] },\r\n    datalist: { dependencies: ['datagrid'] },\r\n    window: { dependencies: ['resizable', 'draggable', 'panel'] },\r\n    dialog: { dependencies: ['linkbutton', 'window'] },\r\n    messager: { dependencies: ['linkbutton', 'window', 'progressbar'] },\r\n    layout: { dependencies: ['resizable', 'panel'] },\r\n    tabs: { dependencies: ['panel', 'linkbutton'] },\r\n    menubutton: { dependencies: ['linkbutton', 'menu'] },\r\n    splitbutton: { dependencies: ['menubutton'] },\r\n    accordion: { dependencies: ['panel'] },\r\n    textbox: { dependencies: ['validatebox', 'linkbutton'] },\r\n    filebox: { dependencies: ['textbox'] },\r\n    combo: { dependencies: ['panel', 'textbox'] },\r\n    combobox: { dependencies: ['combo'] },\r\n    combotree: { dependencies: ['combo', 'tree'] },\r\n    combogrid: { dependencies: ['combo', 'datagrid'] },\r\n    combotreegrid: { dependencies: ['combo', 'treegrid'] },\r\n    validatebox: { dependencies: ['tooltip'] },\r\n    numberbox: { dependencies: ['textbox'] },\r\n    searchbox: { dependencies: ['menubutton', 'textbox'] },\r\n    spinner: { dependencies: ['textbox'] },\r\n    numberspinner: { dependencies: ['spinner', 'numberbox'] },\r\n    timespinner: { dependencies: ['spinner'] },\r\n    tree: { dependencies: ['draggable', 'droppable'] },\r\n    datebox: { dependencies: ['calendar', 'combo'] },\r\n    datetimebox: { dependencies: ['datebox', 'timespinner'] },\r\n    slider: { dependencies: ['draggable'] }\r\n}\r\n/**\r\n * 获取依赖项\r\n * @param name \r\n */\r\nexport function getDepend(name:string){\r\n    let deps = depents[name];\r\n    let depret = [];\r\n    if(deps && deps.dependencies){\r\n        $.map(deps.dependencies, d => {\r\n            if(depents[d]){\r\n                depret = depret.concat(getDepend(d));\r\n            }\r\n            depret.push(d);\r\n        });\r\n    }\r\n    return depret;\r\n}\r\n\r\n/**\r\n * 根据组件名、方法名，获取此方法归属组件（因为方法有可能归属于依赖组件）\r\n * @param componentName 组件名\r\n * @param methodName 方法名\r\n * @param jquery jquery对象\r\n */\r\nexport function getDependNameOfComponent(componentName:string, methodName:string, argdeps, jquery:JQueryStatic):string{\r\n    let methods = jquery.fn[componentName].methods;\r\n    let result = null;\r\n    $.map(Object.getOwnPropertyNames(methods), m => {\r\n        if(m == methodName ){\r\n            result = componentName;\r\n            return false;\r\n        }\r\n    });\r\n    if(!result){\r\n        let deps = depents[componentName] ? depents[componentName].dependencies : null; \r\n        if(deps){\r\n            $.map(deps, d => {\r\n                if(!result){\r\n                    let tmp = getDependNameOfComponent(d, methodName, argdeps, jquery); \r\n\r\n                    if( tmp && argdeps){ //如果查询到的组件名在依赖列表内，可使用\r\n                        let depkeys = Object.getOwnPropertyNames(argdeps).join(',');\r\n                        if(depkeys.indexOf(tmp) >=0){\r\n                            result = tmp;\r\n                        }\r\n                    }\r\n                }\r\n            }); \r\n        }\r\n    }\r\n    return result;\r\n}","import {getDependNameOfComponent} from '../generates/depends' ;\r\nimport {IExecute} from './iexecute';\r\n\r\n\r\n/**\r\n * 获取可执行方法（带依赖检测）\r\n */\r\nexport class DepCheckExecute implements IExecute {\r\n\r\n    public jquery:JQueryStatic;\r\n    /**\r\n     * 执行依赖方法时，需要获取依赖组件的列表\r\n     */\r\n    public deps:any;\r\n    /**\r\n     * 不支持destroy方法的组件\r\n     */\r\n    public noSupportDestroy:Array<string>;\r\n\r\n    constructor(jquery:JQueryStatic){\r\n        this.jquery = jquery;\r\n        this.deps={\r\n            'combo':{\r\n                'textbox': 'textbox'\r\n            },\r\n            'combogrid': {\r\n                'datagrid': 'grid'\r\n            },\r\n            'combotreegrid':{\r\n                'treegrid': 'grid'\r\n            },\r\n            'combotree':{\r\n                'tree': 'tree'\r\n            },\r\n            'datagrid':{\r\n                'panel': 'getPanel',\r\n                'pagination': 'getPager'\r\n            },\r\n            'propertygrid':{\r\n                'panel': 'getPanel'\r\n            },\r\n            'datetimebox':{\r\n                'spinner': 'spinner'\r\n            },\r\n            'datebox':{\r\n                'calendar': 'calendar'\r\n            },\r\n            'searchbox':{\r\n                'textbox': 'textbox',\r\n                'menu': 'menu'\r\n            },\r\n            'datalist':{                \r\n                'panel': 'getPanel',\r\n                'pagination': 'getPager'\r\n            }\r\n        }\r\n        this.noSupportDestroy= ['layout', 'tabs'];\r\n    }\r\n\r\n    /**\r\n     * 获取可执行方法（带依赖检测）\r\n     */\r\n    execute(compName: string, methodName: string, $dom:JQuery, args:Array<any>) {\r\n        let findComp = false;\r\n        $.map(this.noSupportDestroy,(item, key)=>{\r\n            if(item == compName){\r\n                findComp = true;\r\n                return false;\r\n            }\r\n        });\r\n        if(methodName == 'destroy' && findComp){\r\n            return;\r\n        }\r\n        //have bug: 如我执行分页的select方法，很有可能会调用linkbutton的select。依赖组件之间有重名方法时，有问题\r\n        let depCompName = getDependNameOfComponent(compName, methodName, this.deps[compName], this.jquery);\r\n        if(depCompName && depCompName != compName && this.deps[compName]){\r\n            //依赖上的\r\n            var depHandler = $dom[compName].apply($dom, [this.deps[compName][depCompName]]);\r\n            let $depDom = this.jquery(depHandler[0]);\r\n            return depHandler[depCompName].apply($depDom, args);\r\n        } \r\n        return $dom[compName].apply($dom, args);  \r\n    }\r\n}","import {IExecute} from './iexecute';\r\nimport {GenerateOption} from '../generateOption';\r\nimport {DepCheckExecute} from './depcheckExecute';\r\n\r\n/**\r\n * 提供获取的可执行的入口\r\n */\r\nexport class ExecuteProivder implements IExecute {\r\n\r\n    public opt:GenerateOption;\r\n    private executes:IExecute;\r\n    constructor(opt:GenerateOption){\r\n        this.opt = opt;\r\n        this.executes = new DepCheckExecute(this.opt.jquery);\r\n    }\r\n\r\n    execute(compName: string, methodName: string, $dom:JQuery, args:Array<any>) {\r\n        return this.executes.execute(compName, methodName, $dom, args);\r\n    }\r\n}","import { IGenerate } from './igenerate';\r\nimport { GenerateOption } from './generateOption';\r\n\r\nexport class DefaultGenerate implements IGenerate {\r\n    public option:GenerateOption;\r\n    constructor(option:GenerateOption){\r\n        this.option = option;\r\n    }\r\n    generate(componentName: string, params: any, viewModel: any) {\r\n        let first = true, that = this;\r\n\r\n\r\n        this._touchMount(componentName, params, viewModel);\r\n        let observableKeys = this._getObservableKeys(params);\r\n\r\n        //配置参数存在，就进行监听\r\n        if(params.options){ \r\n            //监听params的变化变化\r\n            ko.computed(function(){\r\n                let changeOpts = that._getChangeObservable(params,observableKeys,viewModel);\r\n\r\n                if(first){ //如果是初始化执行，后面的业务不用重复执行了\r\n                    first = false;\r\n                    return;\r\n                }\r\n                if(changeOpts.length>0){\r\n                    that._touchPaint(componentName,params,viewModel,changeOpts,function(){                        \r\n                        //引起了组件重绘\r\n                        viewModel.repaint && viewModel.repaint(params.options); \r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return viewModel;\r\n    }\r\n\r\n     /**\r\n     * 内部方法，获取配置参数(options)上的所有可监控对象的key，首次渲染组件时执行\r\n     * @param params 组件的所有参数\r\n     */\r\n    _getObservableKeys(params:any):Array<string>{\r\n        let keys = new Array<string>();\r\n        let opts = params.options;\r\n        if(!opts) return keys;\r\n        $.map(Object.getOwnPropertyNames(opts),(key)=>{\r\n            let param = opts[key];\r\n            if(ko.isObservable(param)){\r\n                keys.push(key);\r\n            }\r\n        });\r\n        return keys;\r\n    }\r\n\r\n    /**\r\n     * 获取有变更的监控对象列表\r\n     * @param params 配置对象\r\n     * @param observableKeys 可监控的参数列表key\r\n     * @param viewModel 视图数据对象\r\n     * @return \r\n     * {\r\n     *  changeOpts：存在变更的对象列表\r\n     *  reflows：可以使用回流操作来处理的变更列表\r\n     * }\r\n     */\r\n    _getChangeObservable(params:any, observableKeys:Array<string>, viewModel:any):any{\r\n        let opts = params.options; \r\n        let changeOpts = new Array<any>();\r\n        $.map(observableKeys, key => {\r\n            let param = opts[key];\r\n            let tmp = ko.unwrap(param);\r\n            //探测监控对象有变化的属性，区分那些可以用方法进行改变，那些需要重绘\r\n            if(ko.isObservable(param) && param.hasChanged()){\r\n                changeOpts.push(param);\r\n            }\r\n        });\r\n        return changeOpts;\r\n    }\r\n\r\n    /**\r\n     * 触发挂载方法，以及相关勾子\r\n     * @param componentName 组件名称\r\n     * @param params 参数列表\r\n     * @param viewModel 视图数据对象\r\n     */\r\n    _touchMount(componentName:string, params:any, viewModel:any){\r\n        let canPaint = true;\r\n        if(viewModel.beforeMount){//绘制前的勾子\r\n            canPaint = viewModel.beforeMount(params, componentName);\r\n        }\r\n        if(true || canPaint){//阻止子组件的渲染？？？怎么办\r\n            viewModel.paint && viewModel.paint(params.options || {});\r\n            if(viewModel.afterMount){//绘制后的勾子\r\n                viewModel.afterMount(params, componentName);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发组件的重绘\r\n     * @param componentName 组件名称\r\n     * @param params 参数列表\r\n     * @param viewModel 视图数据对象\r\n     * @param changeOpts 存在变更的可监控列表\r\n     * @param action beforePaint与afterPaint之间需要执行的动作\r\n     */\r\n    _touchPaint(componentName:string, params:any, viewModel:any, changeOpts:any, action:any){\r\n        let canPaint;\r\n        if(viewModel.beforePaint){\r\n            canPaint = viewModel.beforePaint(params, componentName, changeOpts);\r\n        }\r\n        if(true || canPaint){ \r\n            action && action();\r\n            if(viewModel.afterPaint){\r\n                viewModel.afterPaint(params, componentName);\r\n            }\r\n        }\r\n    }\r\n}","import { GenerateOption } from \"../generateOption\";\r\n\r\n\r\n/**\r\n * 扩展对window, dialog, panel, Layout, tabs, accordion控件内容可绑定ko组件的能力\r\n */\r\nexport class ExtendBind{\r\n    private option;\r\n    private jquery;\r\n    private ko; \r\n    constructor(option:GenerateOption){\r\n        this.option = option;\r\n        this.jquery = option.jquery;\r\n        this.ko = option.ko; \r\n    }\r\n    extend(name, opts,bindContext){\r\n        let eName = this._getEventName(name);\r\n        if(eName){\r\n            this._extendOption(eName, opts, bindContext);\r\n        }\r\n    }\r\n    /**\r\n     * 获取可扩展的事件名称\r\n     */\r\n    _getEventName = function(name){\r\n        let eventName = null;\r\n        switch(name){\r\n            case \"window\":\r\n            case \"dialog\":\r\n            case \"layout\":\r\n            case \"panel\":\r\n            //modify: 2018-10-08 sam dragon remove onAdd in tabs and accordion, and add listen onBeforeOpen in tabs and accordion.\r\n            case \"tabs\":\r\n            case \"accordion\":\r\n                eventName = \"onBeforeOpen\";\r\n                break;\r\n        }\r\n        return eventName;\r\n    }\r\n    /**\r\n     * 将指定的事件扩展为支持ko组件自动绑定的能力\r\n     * @param eName 事件名称\r\n     * @param opts 配置参数\r\n     * @param bindContext ko组件上下文\r\n     */\r\n    _extendOption(eName, opts,bindContext){ \r\n        let that = this;\r\n        if( opts && opts.viewModel){ \r\n            //说明有ko组件需要绑定\r\n            let _orgEvent = opts[eName];\r\n            let childBindContext; //绑定对象的创建\r\n            opts[eName] = function(){\r\n                //modify: 2018-10-08 sam dragon 处理tabs、accordion组件选项切换引起的Bug。\r\n                if(childBindContext){\r\n                    ko.removeNode(this.firstChild);\r\n                    $(this).append(opts.content);\r\n                }                \r\n                //viewModel必须是对象\r\n                childBindContext = bindContext.createChildContext(opts.viewModel,undefined,function(ctx){\r\n                });\r\n                //@ts-ignore\r\n                that.ko.applyBindingsToDescendants(childBindContext,this);//调用者，肯定是组件\r\n                _orgEvent && _orgEvent.apply(childBindContext.$data, arguments); //执行开发者配置的事件\r\n            };\r\n        }\r\n    }\r\n}","///<reference types=\"../../types/easyui\" />\r\n\r\nimport { IGenerate } from '../igenerate';\r\nimport { GenerateOption } from '../generateOption';\r\nimport { EasyuiHelper } from './easyuiHelper';\r\nimport { relation } from './optionAndMethodsRelation';\r\nimport { getDepend } from './depends';\r\nimport { unique, CONSTKEY, getTemplate } from '../utils';\r\nimport { IExecute, ExecuteProivder } from '../methodExceuteProvider'; \r\nimport { DefaultGenerate } from '../defaultGenerate';\r\nimport {ExtendBind} from './extendbind';\r\n\r\nexport class EasyuiGenerate extends DefaultGenerate {\r\n\r\n    /**\r\n     * easyui对象\r\n     */\r\n    public easyui:any;\r\n\r\n    /**\r\n     * jquery对象\r\n     */\r\n    public jquery:JQueryStatic;\r\n\r\n    /**\r\n     * 获取执行方法的提供者\r\n     */\r\n    public executeProvider:IExecute;\r\n\r\n    /**\r\n     * 监听列表\r\n     */\r\n    private computeds:Array<any>;\r\n\r\n    /**\r\n     * 扩展处理\r\n     */\r\n    private extendBind:ExtendBind;\r\n\r\n    constructor(option:GenerateOption){ \r\n        super(option);\r\n        this.jquery = option.jquery;\r\n        this.easyui = this.jquery.parser;\r\n        this.executeProvider = new ExecuteProivder(option);\r\n        this.extendBind=new ExtendBind(option);\r\n        this.registerPlugins();\r\n    }\r\n\r\n    /**\r\n     * 组件easyui的相关组件\r\n     */\r\n    registerPlugins(){\r\n        //fix easyui defaults\r\n        //1. datagrid missing columns, frozenColumns;\r\n        this.jquery.fn.datagrid.defaults.columns = [[]];\r\n        this.jquery.fn.datagrid.defaults.frozenColumns = [[]];\r\n\r\n        //extends panel default event.\r\n        this._extendPanelEvent();\r\n\r\n        let plugins = this.easyui.plugins;\r\n        //动态生成一个function的类\r\n        $.map(plugins, pluginName => {\r\n            let defaults = this.jquery.fn[pluginName].defaults;\r\n            let methods = this.jquery.fn[pluginName].methods;\r\n            let deps = getDepend(pluginName);\r\n            if(defaults){\r\n                //options必须要是独立的，事件（放原型上），方法可以原型链上的\r\n                let props = Object.getOwnPropertyNames(defaults);\r\n                //方法\r\n                let methodKeys = Object.getOwnPropertyNames(methods);\r\n                if(deps){\r\n                    $.map( deps, dep=>{\r\n                        let depMethods = this.jquery.fn[dep].methods;\r\n                        methodKeys = methodKeys.concat(Object.getOwnPropertyNames(depMethods));\r\n                    });\r\n                    methodKeys = unique(methodKeys);\r\n                }\r\n                this.option.ko.components.register(`${CONSTKEY.CompPrefix}${pluginName}`,{\r\n                    template: getTemplate(pluginName),\r\n                    viewModel: EasyuiHelper.createEasyui(pluginName, props, methodKeys, this.executeProvider, this.extendBind)\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    generate(componentName: string, params: any, viewModel: any):any {\r\n        let first = true, that = this;\r\n\r\n        this._touchMount(componentName, params, viewModel);\r\n        //获取监控数据列表\r\n        let observableKeys = this._getObservableKeys(params);\r\n\r\n        //配置参数存在，就进行监听\r\n        if(params.options){ \r\n            //监听params的变化变化\r\n            //@ts-ignore\r\n            viewModel.computedObservable = ko.computed({\r\n                read: function(){\r\n                \r\n                    //todo: 无意义，ko比较的是否判断，是需要传入一个比较的版本号的，每个属性都是有改动\r\n                    let changeObs = that._getChangeObservable(params,observableKeys,viewModel);\r\n    \r\n                    if(first){ //如果是初始化执行，后面的业务不用重复执行了\r\n                        first = false;\r\n                        return;\r\n                    }\r\n                    if(changeObs.changeOpts.length>0){\r\n                        that._touchPaint(componentName, params, viewModel, changeObs,function(){\r\n                            if(changeObs.changeOpts.length == changeObs.reflows.length){//说明配置的改变，可能通过方法操作完成\r\n                                $.map(changeObs.reflows, item=>{\r\n                                    viewModel[item.methodName](item.val);\r\n                                });\r\n                            }else{\r\n                                //引起了组件重绘\r\n                                viewModel.repaint(params.options);\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                disposeWhenNodeIsRemoved:true\r\n            });\r\n        }\r\n\r\n        return viewModel;\r\n    }\r\n\r\n    /**\r\n     * 获取有变更的监控对象列表\r\n     * @param params 配置对象\r\n     * @param observableKeys 可监控的参数列表key\r\n     * @param viewModel 视图数据对象\r\n     * @return \r\n     * {\r\n     *  changeOpts：存在变更的对象列表\r\n     *  reflows：可以使用回流操作来处理的变更列表\r\n     * }\r\n     */\r\n    _getChangeObservable(params:any, observableKeys:Array<string>, viewModel:any):any{\r\n        let opts = params.options; \r\n        let changeOpts = new Array<any>();\r\n        let reflows = new Array<any>(); //可以通过方法来进行配置改变的参数\r\n        $.map(observableKeys, key => {\r\n            let param = opts[key];\r\n            let tmp = ko.unwrap(param);\r\n            //探测监控对象有变化的属性，区分那些可以用方法进行改变，那些需要重绘\r\n            if(ko.isObservable(param) && param.hasChanged()){\r\n                changeOpts.push(param);\r\n                if(relation[viewModel.name] && relation[viewModel.name][key]){\r\n                    reflows.push({\r\n                        val: tmp,\r\n                        methodName: relation[viewModel.name][key]\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        return {\r\n            changeOpts: changeOpts,\r\n            reflows: reflows\r\n        }\r\n    }\r\n\r\n    /**\r\n     * modify:2018-06-05 sam dragon, 重写panel的onOpen方法，用于panel内容的组件解析\r\n     * modify:2018-09-30 sam dragon, linkbutton增加destroy方法，用于销毁组件\r\n     */\r\n    _extendPanelEvent(){\r\n        $.fn.panel.defaults.onOpen = function(){\r\n        }\r\n        //@ts-ignore\r\n        $.fn.linkbutton.methods.destroy = function($dom){\r\n            $dom.unbind('.linkbutton');\r\n            $dom.remove();\r\n        }\r\n    }\r\n}","import {IExecute} from '../methodExceuteProvider';\r\nimport {CONSTKEY, getTemplate, COMPTYPE, convertArgToArray} from '../utils';\r\nimport {BaseEasyuiComp} from './baseEasyuiComp';\r\nimport { ExtendBind } from './extendbind';\r\n \r\nexport  class EasyuiHelper{\r\n    static createEasyui(compName:string, props:Array<string>, methods, execute:IExecute, extendBind:ExtendBind):any{\r\n        let tmpClass = class extends BaseEasyuiComp { \r\n            public $dom:JQuery;\r\n            public params: any;\r\n            constructor(params, componentConfig){ \r\n                super(compName.toLowerCase(), props, componentConfig);\r\n                this.params = params;\r\n                if(!this.params.options){\r\n                    this.params.options = {};\r\n                }\r\n                this.$dom = $($(componentConfig.element)[0].firstChild);\r\n                let that = this;\r\n                //绑定方法，方法还需要继承组件支持的方法的绑定\r\n                $.map(Object.getOwnPropertyNames(methods), index=>{\r\n                    if(!$.isNumeric(index)) return true;\r\n                    let methodName = methods[index]; \r\n                    that[methodName] = function(){\r\n                        //需要加一个拦截机制，用于处理依赖组件的方法（如：combogrid，依赖grid，那么grid的方法怎么执行）\r\n                        let args = convertArgToArray.call(arguments);\r\n                        //传入的参数进行扩展\r\n                        extendBind.extend(that.name, args[0], that.koContext); \r\n                        args.unshift(methodName);\r\n                        return execute.execute(that.name, methodName, that.$dom, args); \r\n                    }; \r\n                }); \r\n            }   \r\n            \r\n            /**\r\n             * 绑定change事件\r\n             */\r\n            private bindChangeEvent(sourceopts, opt:any){ \r\n                \r\n                let changeEvent = false;\r\n                $.map(props,(item, key)=>{\r\n                    if(item == 'onChange'){\r\n                        changeEvent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if(sourceopts.value && ko.isObservable(sourceopts.value) && changeEvent){\r\n                    let onChangeFn = opt.onChange;\r\n                    let that = this;\r\n                    opt['onChange'] = function(newValue, oldValue){\r\n                        //modify: 2018-10-10 sam dragon set value, but don't send notification.\r\n                        // and add onChange event.\r\n                        sourceopts.value._latestValue = newValue; \r\n                        onChangeFn && onChangeFn.call(that, newValue, oldValue);\r\n                    }\r\n                }\r\n            }\r\n            \r\n            protected createOptions(options){\r\n                let opt = this.createOptionsCore(options);\r\n                if(options){\r\n                    this.bindChangeEvent(options, opt);\r\n                }    \r\n                extendBind.extend(this.name, opt, this.koContext); \r\n                return opt;\r\n            } \r\n            public repaint(options:any){\r\n                this.resetComp(options);\r\n                this.paint(options);\r\n            }\r\n            public dispose(){\r\n                console.log('dispose ' + this.name);\r\n                //@ts-ignore\r\n                if(this.computedObservable){\r\n                    //@ts-ignore\r\n                    this.computedObservable.dispose();\r\n                }\r\n                if(this.params.options.dispose){\r\n                    this.params.options.dispose.apply(this);\r\n                }else{\r\n                    //@ts-ignore\r\n                    this.destroy && this.destroy();\r\n                }\r\n            }\r\n        };\r\n\r\n        return tmpClass;\r\n    }\r\n}\r\n/**\r\n * 根据dom获取上下文\r\n * @param dom dom节点 \r\n */\r\nexport function getContextFor(dom:HTMLElement){\r\n    let comp = $.data(dom);\r\n    return comp ? comp.$data : null;\r\n}","import { EasyuiMessager } from './koeasyuimessager';\r\nimport { EasyuiDialogs } from './kodialogs';\r\nimport { CONSTKEY } from '../utils';\r\n\r\nexport function use(ko:KnockoutStatic){\r\n    ko.components.register(`${CONSTKEY.CompPrefix}messager`,{\r\n        viewModel:EasyuiMessager,\r\n        template: '<div></div>'\r\n    });\r\n    //dialogs\r\n    ko.components.register(`${CONSTKEY.CompPrefix}dialogs`,{\r\n        viewModel:EasyuiDialogs,\r\n        template:EasyuiDialogs.getTemplate()\r\n    }); \r\n}\r\n\r\nexport * from './easyuiGenerate';\r\nexport { getContextFor } from './EasyuiHelper';\r\nexport { getDependNameOfComponent } from './depends';","import {IGenerate} from './igenerate';\r\nimport {GenerateOption} from './generateOption';\r\nimport {EasyuiGenerate, use} from './generates';\r\nimport { COMPTYPE } from './utils';\r\nimport { DefaultGenerate } from './defaultGenerate';\r\n\r\n/**\r\n * 生成ko组件，并注册到ko组件对象中\r\n */\r\nexport class GenerateFactory implements IGenerate {\r\n    public option: GenerateOption;\r\n    public generates: any;\r\n    constructor(option:GenerateOption){\r\n        this.option = option;\r\n        this.generates ={\r\n            [COMPTYPE.easyui]: new EasyuiGenerate(this.option),\r\n            [COMPTYPE.norm]: new DefaultGenerate(this.option)\r\n        }\r\n        use(this.option.ko); //引用ko-messager组件\r\n    }\r\n\r\n    generate(componentName: string, params: any, viewModel: any):any {\r\n        let generateHandler = this.generates[viewModel.type || COMPTYPE.norm];\r\n        if(generateHandler){\r\n            return generateHandler.generate(componentName, params, viewModel);\r\n        }\r\n        return viewModel;\r\n    }\r\n}","import {IGenerate} from './igenerate';\r\n\r\n/**\r\n * ko的自定义loader，用于创建ko-easyui组件的生命周期\r\n */\r\nexport class EasyuiLoader{\r\n    public factory:IGenerate;\r\n    constructor(factory: IGenerate){ \r\n        this.factory = factory;\r\n    }\r\n    getConfig(name:any, callback:any){\r\n        callback(null);\r\n    }\r\n    loadComponent(name:any, componentConfig:any, callback:any){\r\n        callback(null);\r\n    }\r\n    loadTemplate(name:any, templateConfig:any, callback:any){\r\n        //这里做一些视图不显示的控制，在渲染数据后，进行视频的展示\r\n        callback(null);\r\n    }\r\n    loadViewModel(name:any, viewModelConfig:any, callback:any){\r\n        //到这里，视图都是已经呈现好的\r\n        //这里要产生两个生命周期：渲染数据前、渲染数据后，以及一个视图重绘的事件\r\n        var nViewModelConfig = (params, componentConfig) => {\r\n            \r\n            //获取root对象\r\n            let $obj = ko.contextFor(componentConfig.element);\r\n            let $root = $obj.$root;\r\n            let vm = new viewModelConfig(params, componentConfig, $root, $obj.$data); //current $data is parent.\r\n            //激活\r\n            if(vm.activate){\r\n                vm.activate(params,componentConfig);\r\n            }\r\n            let that = this;\r\n            vm.koDescendantsComplete = function(dom){\r\n                //组件绑定完成后的事件\r\n                //写入Context到自定义元素dom上\r\n                $.data(dom, ko.contextFor(dom.firstChild));\r\n                that.factory.generate(name, params, vm); \r\n            }\r\n            return vm;\r\n        }\r\n        callback(nViewModelConfig);\r\n    }\r\n} ","import {BaseComp} from './basecomp';\r\nimport { COMPTYPE } from './utils';\r\n\r\nexport class Components extends BaseComp{\r\n    public comps:KnockoutObservableArray<any>;\r\n    private paramComp:KnockoutObservable<any>;\r\n    constructor(params){\r\n        super(COMPTYPE.norm);\r\n        this.comps = ko.observableArray();\r\n        this.paramComp = params.comp;\r\n        if(this.paramComp){\r\n            this.paramComp.subscribe((nVal)=>{\r\n                let compInfo = {\r\n                    id:0,\r\n                    name:null,\r\n                    params:{},\r\n                    show: ko.observable(false)\r\n                };\r\n                if(typeof nVal == 'string'){\r\n                    compInfo.name = nVal;\r\n                }else{\r\n                    compInfo.name = nVal.name;\r\n                    compInfo.params = nVal.params || {};\r\n                    compInfo.id = nVal.id || 0;\r\n                }\r\n                //@ts-ignore, the first read, execute fun at param in computed.\r\n                compInfo.domId =  ko.computed(function(){\r\n                    return 'components-item' + this.id;\r\n                }, compInfo);\r\n                this._setComp(compInfo);\r\n            }); \r\n        }\r\n    }\r\n    private _setComp(compinfo){\r\n        var comp;\r\n        $.each(ko.unwrap(this.comps), function(i,v){\r\n            v.show(false);\r\n            if(v.name == compinfo.name && v.id == compinfo.id){\r\n                comp = v;\r\n            }\r\n        });\r\n        if(!comp){\r\n            comp = compinfo;\r\n            this.comps.push(comp);\r\n        }\r\n        comp.show(true);\r\n    }\r\n    public paint(options: any) {\r\n\r\n    }    \r\n    public repaint(options: any) {\r\n\r\n    }\r\n    public remove(arg:any){\r\n        var comp;\r\n        let isObj = Object.prototype.toString.call(arg) == '[object String]' ? false : true;\r\n        $.each(ko.unwrap(this.comps), function(i,v){\r\n            //modify: 2019-07-11 sam  remark: arg is object or string\r\n            if( (isObj && arg.name == v.name && arg.id == v.id ) || (!isObj && v.name == arg)){\r\n                comp = v;\r\n            }\r\n        });\r\n        if(comp){\r\n            comp.show(false);\r\n            this.comps.remove(comp);\r\n        }\r\n    }\r\n    public removeAll(){\r\n        this.comps.removeAll();\r\n    }\r\n    static getTemplate(){\r\n        return '<div class=\"components-list\" data-bind=\"foreach:comps\" ><div class=\"components-item\" data-bind=\"component:$data,visible:show,attr:{id:$data.domId}\" ></div></div>'\r\n    }\r\n}","/**\r\n * 主体思路\r\n * 1. 获取所有easyui的组件，以及组件的相关事件、配置参数、方法等\r\n * 2. easyui组件 映射为 ko-easyui组件，新组件名为 ko-easyui原组件名\r\n * 3. 做渲染钩子，建立一个组件生命周期的钩子\r\n * 4. 组件注册到ko对象上\r\n */\r\n\r\n import {IGenerate} from './igenerate';\r\n import {GenerateOption} from './generateOption';\r\n import {GenerateFactory} from './generateFactory'; \r\n import {EasyuiLoader} from './loader';\r\n import { CONSTKEY } from './utils';\r\n import { Components } from './kocomponents';\r\n\r\n\r\n /**\r\n  * 插件注册入口\r\n  * @param ko \r\n  */\r\n export function use(ko:KnockoutStatic){\r\n     let opt = new GenerateOption(ko);\r\n     let factory = new GenerateFactory(opt);\r\n     ko.components.loaders.unshift(new EasyuiLoader(factory));\r\n\r\n     \r\n    //ko-components\r\n    ko.components.register(`${CONSTKEY.CompPrefix}components`,{\r\n        viewModel:Components,\r\n        template:Components.getTemplate()\r\n    }); \r\n }\r\n\r\n export { getContextFor } from './generates';"],"names":["ko","jquery","$","type","arrays","result","Array","hash","Object","create","irow","length","elm","push","CONSTKEY","compName","defaultVaue","specialValue","val","convertArgToArray","prototype","slice","COMPTYPE","name","props","componentConfig","easyui","$dom","element","firstChild","$parent","parent","context","contextFor","data","koContext","options","opt","viewModel","toJS","map","value","key","substring","isFunction","bind","createOptionsCore","createOptions","closest","CompPrefix","destroy","getTemplate","append","BaseComp","params","getOwnPropertyNames","messager","defaults","bindMethods","keys","getMethodKeys","args","call","arguments","apply","methodKeys","opts","extend","paint","BaseEasyuiComp","norm","bindContext","list","observableArray","that","unwrap","funClose","onClose","removeDialog","$key","dom","cleanNode","firstElementChild","remove","item","methods","execute","extendBind","tmpClass","toLowerCase","isNumeric","index","methodName","unshift","sourceopts","changeEvent","isObservable","onChangeFn","onChange","newValue","oldValue","_latestValue","bindChangeEvent","resetComp","console","log","computedObservable","dispose","relation","tooltip","textbox","panel","passwordbox","combo","combobox","combotree","combogrid","combotreegrid","tagbox","numberbox","datebox","datetimebox","datetimespinner","spinner","numberspinner","timespinner","slider","filebox","datagrid","datalist","propertygrid","tree","treegrid","depents","pagination","dependencies","window","dialog","layout","tabs","menubutton","splitbutton","accordion","validatebox","searchbox","deps","depret","d","concat","getDepend","componentName","argdeps","fn","m","tmp","getDependNameOfComponent","depkeys","join","indexOf","noSupportDestroy","findComp","depCompName","depHandler","$depDom","executes","DepCheckExecute","option","first","_touchMount","observableKeys","_getObservableKeys","computed","changeOpts","_getChangeObservable","_touchPaint","repaint","param","hasChanged","canPaint","beforeMount","afterMount","action","beforePaint","afterPaint","eventName","eName","_getEventName","_extendOption","_orgEvent","childBindContext","removeNode","content","createChildContext","undefined","ctx","applyBindingsToDescendants","$data","parser","executeProvider","ExecuteProivder","ExtendBind","registerPlugins","columns","frozenColumns","_extendPanelEvent","plugins","pluginName","depMethods","dep","unique","components","register","template","EasyuiHelper","createEasyui","read","changeObs","reflows","disposeWhenNodeIsRemoved","onOpen","linkbutton","unbind","DefaultGenerate","comp","EasyuiMessager","EasyuiDialogs","generates","EasyuiGenerate","use","generateHandler","generate","factory","callback","templateConfig","viewModelConfig","nViewModelConfig","$obj","$root","vm","activate","koDescendantsComplete","comps","paramComp","subscribe","nVal","compInfo","id","show","observable","domId","_setComp","compinfo","each","i","v","arg","isObj","toString","removeAll","GenerateOption","GenerateFactory","loaders","EasyuiLoader","Components"],"mappings":"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"}